@model RepairShop.Web.ViewModels.EmployeeJobEditViewModel

@{

    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RepairJob</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Job.Id)
    @Html.HiddenFor(model => model.Job.CustomerId)
    @Html.HiddenFor(model => model.JobEmployee.Id)
    @Html.HiddenFor(model => model.JobEmployee.EmployeeId)
    @Html.HiddenFor(model => model.JobEmployee.RepairJobId)
    @Html.HiddenFor(model => model.Job.StartDate)
    @Html.HiddenFor(model => model.Job.EndDate)


    <div class="form-group">
        @Html.LabelFor(model => model.Job.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Model.Job.StartDate.ToString("dd-MM-yyyy")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Job.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Model.Job.EndDate.ToString("dd-MM-yyyy")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Job.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Job.Status, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Job.JobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Job.JobDescription)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Job.RepairNotes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Job.RepairNotes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Job.RepairNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobEmployee.HoursWorked, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobEmployee.HoursWorked, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobEmployee.HoursWorked, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3>
        @Html.LabelFor(model => model.Parts, htmlAttributes: new { @class = "control-label col-md-2" })
    </h3>
    <table class="table">

        <tr>
            <th>
                @Html.DisplayNameFor(x => x.Parts.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(x => x.Parts.First().Amount)
            </th>
            <th></th>
        </tr>

        @for (int i = 0; i < Model.Parts.Length; i++)
        {
            <tr class="@(!Model.Parts[i].InStock ? "late-colors" : "")">
                <td>
                    @Html.Label(Model.Parts[i].Name)
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Parts[i].Amount, new { type = "number", @class = "form-control", min = "0" })
                </td>
                <td>
                    <input type="submit" value="Update" name="update" class="btn btn-default" />
                </td>
            </tr>
            @Html.HiddenFor(model => model.Parts[i].PartId)
            @Html.HiddenFor(model => model.Parts[i].Id)
            @Html.HiddenFor(model => model.Parts[i].Name)
        }

        @{ Html.RenderAction("AddPartToJob", new { id = Model.Job.Id }); }
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Finish Job" name="done" class="btn btn-default" />
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
